//! apple-sys main module
//! auto-generated by "python 'configure.py'"
#![allow(dead_code)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(improper_ctypes)]
#![allow(non_snake_case)]

#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "iAd"))]
use crate::iAd;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "iTunesLibrary"))]
use crate::iTunesLibrary;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "vmnet"))]
use crate::vmnet;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ARKit"))]
use crate::ARKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AVFAudio"))]
use crate::AVFAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AVFAudio"))]
use crate::AVFAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "AVFAudio"))]
use crate::AVFAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AVFAudio"))]
use crate::AVFAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AVFoundation"))]
use crate::AVFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AVFoundation"))]
use crate::AVFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "AVFoundation"))]
use crate::AVFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AVFoundation"))]
use crate::AVFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AVKit"))]
use crate::AVKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AVKit"))]
use crate::AVKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "AVKit"))]
use crate::AVKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AVKit"))]
use crate::AVKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AVRouting"))]
use crate::AVRouting;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AVRouting"))]
use crate::AVRouting;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Accelerate"))]
use crate::Accelerate;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Accelerate"))]
use crate::Accelerate;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Accelerate"))]
use crate::Accelerate;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Accelerate"))]
use crate::Accelerate;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Accessibility"))]
use crate::Accessibility;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Accessibility"))]
use crate::Accessibility;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Accessibility"))]
use crate::Accessibility;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Accessibility"))]
use crate::Accessibility;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Accounts"))]
use crate::Accounts;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Accounts"))]
use crate::Accounts;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ActivityKit"))]
use crate::ActivityKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AdServices"))]
use crate::AdServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AdServices"))]
use crate::AdServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AdSupport"))]
use crate::AdSupport;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AdSupport"))]
use crate::AdSupport;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AdSupport"))]
use crate::AdSupport;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AddressBook"))]
use crate::AddressBook;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AddressBook"))]
use crate::AddressBook;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AddressBookUI"))]
use crate::AddressBookUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AppClip"))]
use crate::AppClip;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AppIntents"))]
use crate::AppIntents;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AppIntents"))]
use crate::AppIntents;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "AppIntents"))]
use crate::AppIntents;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AppIntents"))]
use crate::AppIntents;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AppKit"))]
use crate::AppKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AppTrackingTransparency"))]
use crate::AppTrackingTransparency;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AppTrackingTransparency"))]
use crate::AppTrackingTransparency;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AppTrackingTransparency"))]
use crate::AppTrackingTransparency;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AppleScriptKit"))]
use crate::AppleScriptKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AppleScriptObjC"))]
use crate::AppleScriptObjC;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ApplicationServices"))]
use crate::ApplicationServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AssetsLibrary"))]
use crate::AssetsLibrary;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AudioToolbox"))]
use crate::AudioToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AudioToolbox"))]
use crate::AudioToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AudioToolbox"))]
use crate::AudioToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AudioUnit"))]
use crate::AudioUnit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AudioUnit"))]
use crate::AudioUnit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AudioUnit"))]
use crate::AudioUnit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AudioVideoBridging"))]
use crate::AudioVideoBridging;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AuthenticationServices"))]
use crate::AuthenticationServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AuthenticationServices"))]
use crate::AuthenticationServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "AuthenticationServices"))]
use crate::AuthenticationServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "AuthenticationServices"))]
use crate::AuthenticationServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AutomaticAssessmentConfiguration"))]
use crate::AutomaticAssessmentConfiguration;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "AutomaticAssessmentConfiguration"))]
use crate::AutomaticAssessmentConfiguration;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Automator"))]
use crate::Automator;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "BackgroundAssets"))]
use crate::BackgroundAssets;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "BackgroundAssets"))]
use crate::BackgroundAssets;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "BackgroundTasks"))]
use crate::BackgroundTasks;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "BackgroundTasks"))]
use crate::BackgroundTasks;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "BackgroundTasks"))]
use crate::BackgroundTasks;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "BusinessChat"))]
use crate::BusinessChat;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "BusinessChat"))]
use crate::BusinessChat;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CFNetwork"))]
use crate::CFNetwork;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CFNetwork"))]
use crate::CFNetwork;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CFNetwork"))]
use crate::CFNetwork;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CalendarStore"))]
use crate::CalendarStore;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CallKit"))]
use crate::CallKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CallKit"))]
use crate::CallKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CallKit"))]
use crate::CallKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CarPlay"))]
use crate::CarPlay;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Carbon"))]
use crate::Carbon;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ClassKit"))]
use crate::ClassKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ClassKit"))]
use crate::ClassKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ClockKit"))]
use crate::ClockKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "ClockKit"))]
use crate::ClockKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CloudKit"))]
use crate::CloudKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CloudKit"))]
use crate::CloudKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CloudKit"))]
use crate::CloudKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CloudKit"))]
use crate::CloudKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Cocoa"))]
use crate::Cocoa;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Collaboration"))]
use crate::Collaboration;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ColorSync"))]
use crate::ColorSync;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ColorSync"))]
use crate::ColorSync;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "ColorSync"))]
use crate::ColorSync;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ColorSync"))]
use crate::ColorSync;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Contacts"))]
use crate::Contacts;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Contacts"))]
use crate::Contacts;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Contacts"))]
use crate::Contacts;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ContactsUI"))]
use crate::ContactsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ContactsUI"))]
use crate::ContactsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreAudio"))]
use crate::CoreAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreAudio"))]
use crate::CoreAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreAudio"))]
use crate::CoreAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreAudio"))]
use crate::CoreAudio;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreAudioKit"))]
use crate::CoreAudioKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreAudioKit"))]
use crate::CoreAudioKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreBluetooth"))]
use crate::CoreBluetooth;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreBluetooth"))]
use crate::CoreBluetooth;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreBluetooth"))]
use crate::CoreBluetooth;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreBluetooth"))]
use crate::CoreBluetooth;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreData"))]
use crate::CoreData;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreData"))]
use crate::CoreData;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreData"))]
use crate::CoreData;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreData"))]
use crate::CoreData;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreFoundation"))]
use crate::CoreFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreFoundation"))]
use crate::CoreFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreFoundation"))]
use crate::CoreFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreFoundation"))]
use crate::CoreFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreGraphics"))]
use crate::CoreGraphics;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreGraphics"))]
use crate::CoreGraphics;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreGraphics"))]
use crate::CoreGraphics;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreGraphics"))]
use crate::CoreGraphics;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreHaptics"))]
use crate::CoreHaptics;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreHaptics"))]
use crate::CoreHaptics;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreHaptics"))]
use crate::CoreHaptics;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreImage"))]
use crate::CoreImage;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreImage"))]
use crate::CoreImage;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreImage"))]
use crate::CoreImage;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreLocation"))]
use crate::CoreLocation;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreLocation"))]
use crate::CoreLocation;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreLocation"))]
use crate::CoreLocation;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreLocation"))]
use crate::CoreLocation;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreLocationUI"))]
use crate::CoreLocationUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreLocationUI"))]
use crate::CoreLocationUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreMIDI"))]
use crate::CoreMIDI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreMIDI"))]
use crate::CoreMIDI;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreMIDI"))]
use crate::CoreMIDI;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreMIDI"))]
use crate::CoreMIDI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreML"))]
use crate::CoreML;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreML"))]
use crate::CoreML;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreML"))]
use crate::CoreML;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreML"))]
use crate::CoreML;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreMedia"))]
use crate::CoreMedia;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreMedia"))]
use crate::CoreMedia;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreMedia"))]
use crate::CoreMedia;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreMedia"))]
use crate::CoreMedia;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreMediaIO"))]
use crate::CoreMediaIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreMotion"))]
use crate::CoreMotion;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreMotion"))]
use crate::CoreMotion;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreMotion"))]
use crate::CoreMotion;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreNFC"))]
use crate::CoreNFC;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreServices"))]
use crate::CoreServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreServices"))]
use crate::CoreServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreServices"))]
use crate::CoreServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreServices"))]
use crate::CoreServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreSpotlight"))]
use crate::CoreSpotlight;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreSpotlight"))]
use crate::CoreSpotlight;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreSpotlight"))]
use crate::CoreSpotlight;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreTelephony"))]
use crate::CoreTelephony;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreTelephony"))]
use crate::CoreTelephony;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreText"))]
use crate::CoreText;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreText"))]
use crate::CoreText;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreText"))]
use crate::CoreText;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreText"))]
use crate::CoreText;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreTransferable"))]
use crate::CoreTransferable;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreTransferable"))]
use crate::CoreTransferable;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreTransferable"))]
use crate::CoreTransferable;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreTransferable"))]
use crate::CoreTransferable;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreVideo"))]
use crate::CoreVideo;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CoreVideo"))]
use crate::CoreVideo;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CoreVideo"))]
use crate::CoreVideo;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CoreVideo"))]
use crate::CoreVideo;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CoreWLAN"))]
use crate::CoreWLAN;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "CryptoTokenKit"))]
use crate::CryptoTokenKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "CryptoTokenKit"))]
use crate::CryptoTokenKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "CryptoTokenKit"))]
use crate::CryptoTokenKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "CryptoTokenKit"))]
use crate::CryptoTokenKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "DVDPlayback"))]
use crate::DVDPlayback;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "DataDetection"))]
use crate::DataDetection;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "DataDetection"))]
use crate::DataDetection;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "DataDetection"))]
use crate::DataDetection;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "DataDetection"))]
use crate::DataDetection;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "DeviceCheck"))]
use crate::DeviceCheck;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "DeviceCheck"))]
use crate::DeviceCheck;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "DeviceCheck"))]
use crate::DeviceCheck;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "DeviceCheck"))]
use crate::DeviceCheck;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "DeviceDiscoveryExtension"))]
use crate::DeviceDiscoveryExtension;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "DeviceDiscoveryUI"))]
use crate::DeviceDiscoveryUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "DirectoryService"))]
use crate::DirectoryService;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "DiscRecording"))]
use crate::DiscRecording;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "DiscRecordingUI"))]
use crate::DiscRecordingUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "DiskArbitration"))]
use crate::DiskArbitration;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "EventKit"))]
use crate::EventKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "EventKit"))]
use crate::EventKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "EventKit"))]
use crate::EventKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "EventKitUI"))]
use crate::EventKitUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ExceptionHandling"))]
use crate::ExceptionHandling;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ExecutionPolicy"))]
use crate::ExecutionPolicy;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ExposureNotification"))]
use crate::ExposureNotification;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ExposureNotification"))]
use crate::ExposureNotification;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ExposureNotification"))]
use crate::ExposureNotification;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ExtensionFoundation"))]
use crate::ExtensionFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ExtensionFoundation"))]
use crate::ExtensionFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "ExtensionFoundation"))]
use crate::ExtensionFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ExtensionFoundation"))]
use crate::ExtensionFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ExtensionKit"))]
use crate::ExtensionKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ExtensionKit"))]
use crate::ExtensionKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "ExtensionKit"))]
use crate::ExtensionKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ExtensionKit"))]
use crate::ExtensionKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ExternalAccessory"))]
use crate::ExternalAccessory;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ExternalAccessory"))]
use crate::ExternalAccessory;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ExternalAccessory"))]
use crate::ExternalAccessory;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "FileProvider"))]
use crate::FileProvider;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "FileProvider"))]
use crate::FileProvider;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "FileProviderUI"))]
use crate::FileProviderUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "FileProviderUI"))]
use crate::FileProviderUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "FinderSync"))]
use crate::FinderSync;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ForceFeedback"))]
use crate::ForceFeedback;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Foundation"))]
use crate::Foundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Foundation"))]
use crate::Foundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Foundation"))]
use crate::Foundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Foundation"))]
use crate::Foundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "GLKit"))]
use crate::GLKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "GLKit"))]
use crate::GLKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "GLKit"))]
use crate::GLKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "GameController"))]
use crate::GameController;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "GameController"))]
use crate::GameController;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "GameController"))]
use crate::GameController;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "GameKit"))]
use crate::GameKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "GameKit"))]
use crate::GameKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "GameKit"))]
use crate::GameKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "GameKit"))]
use crate::GameKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "GameplayKit"))]
use crate::GameplayKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "GameplayKit"))]
use crate::GameplayKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "GameplayKit"))]
use crate::GameplayKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "HealthKit"))]
use crate::HealthKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "HealthKit"))]
use crate::HealthKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "HealthKit"))]
use crate::HealthKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "HealthKitUI"))]
use crate::HealthKitUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "HomeKit"))]
use crate::HomeKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "HomeKit"))]
use crate::HomeKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "HomeKit"))]
use crate::HomeKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Hypervisor"))]
use crate::Hypervisor;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ICADevices"))]
use crate::ICADevices;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IMServicePlugIn"))]
use crate::IMServicePlugIn;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IOBluetooth"))]
use crate::IOBluetooth;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IOBluetoothUI"))]
use crate::IOBluetoothUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IOKit"))]
use crate::IOKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IOSurface"))]
use crate::IOSurface;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "IOSurface"))]
use crate::IOSurface;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "IOSurface"))]
use crate::IOSurface;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IOUSBHost"))]
use crate::IOUSBHost;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IdentityLookup"))]
use crate::IdentityLookup;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "IdentityLookup"))]
use crate::IdentityLookup;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "IdentityLookupUI"))]
use crate::IdentityLookupUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ImageCaptureCore"))]
use crate::ImageCaptureCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ImageCaptureCore"))]
use crate::ImageCaptureCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ImageIO"))]
use crate::ImageIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ImageIO"))]
use crate::ImageIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "ImageIO"))]
use crate::ImageIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ImageIO"))]
use crate::ImageIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "InputMethodKit"))]
use crate::InputMethodKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "InstallerPlugins"))]
use crate::InstallerPlugins;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "InstantMessage"))]
use crate::InstantMessage;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Intents"))]
use crate::Intents;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Intents"))]
use crate::Intents;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Intents"))]
use crate::Intents;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Intents"))]
use crate::Intents;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "IntentsUI"))]
use crate::IntentsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "IntentsUI"))]
use crate::IntentsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "IntentsUI"))]
use crate::IntentsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "JavaNativeFoundation"))]
use crate::JavaNativeFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "JavaRuntimeSupport"))]
use crate::JavaRuntimeSupport;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "JavaScriptCore"))]
use crate::JavaScriptCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "JavaScriptCore"))]
use crate::JavaScriptCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "JavaScriptCore"))]
use crate::JavaScriptCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Kerberos"))]
use crate::Kerberos;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "KernelManagement"))]
use crate::KernelManagement;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "LatentSemanticMapping"))]
use crate::LatentSemanticMapping;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "LinkPresentation"))]
use crate::LinkPresentation;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "LinkPresentation"))]
use crate::LinkPresentation;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "LinkPresentation"))]
use crate::LinkPresentation;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "LocalAuthentication"))]
use crate::LocalAuthentication;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "LocalAuthentication"))]
use crate::LocalAuthentication;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "LocalAuthentication"))]
use crate::LocalAuthentication;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "LocalAuthenticationEmbeddedUI"))]
use crate::LocalAuthenticationEmbeddedUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "LocalAuthenticationEmbeddedUI"))]
use crate::LocalAuthenticationEmbeddedUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MLCompute"))]
use crate::MLCompute;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MLCompute"))]
use crate::MLCompute;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MLCompute"))]
use crate::MLCompute;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MailKit"))]
use crate::MailKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MapKit"))]
use crate::MapKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MapKit"))]
use crate::MapKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "MapKit"))]
use crate::MapKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MapKit"))]
use crate::MapKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Matter"))]
use crate::Matter;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Matter"))]
use crate::Matter;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Matter"))]
use crate::Matter;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Matter"))]
use crate::Matter;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MatterSupport"))]
use crate::MatterSupport;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MediaAccessibility"))]
use crate::MediaAccessibility;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MediaAccessibility"))]
use crate::MediaAccessibility;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MediaAccessibility"))]
use crate::MediaAccessibility;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MediaLibrary"))]
use crate::MediaLibrary;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MediaPlayer"))]
use crate::MediaPlayer;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MediaPlayer"))]
use crate::MediaPlayer;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "MediaPlayer"))]
use crate::MediaPlayer;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MediaPlayer"))]
use crate::MediaPlayer;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MediaSetup"))]
use crate::MediaSetup;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MediaToolbox"))]
use crate::MediaToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MediaToolbox"))]
use crate::MediaToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MediaToolbox"))]
use crate::MediaToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MessageUI"))]
use crate::MessageUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Messages"))]
use crate::Messages;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Metal"))]
use crate::Metal;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Metal"))]
use crate::Metal;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Metal"))]
use crate::Metal;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MetalFX"))]
use crate::MetalFX;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MetalFX"))]
use crate::MetalFX;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MetalKit"))]
use crate::MetalKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MetalKit"))]
use crate::MetalKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MetalKit"))]
use crate::MetalKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MetalPerformanceShaders"))]
use crate::MetalPerformanceShaders;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MetalPerformanceShadersGraph"))]
use crate::MetalPerformanceShadersGraph;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MetricKit"))]
use crate::MetricKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MetricKit"))]
use crate::MetricKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MetricKit"))]
use crate::MetricKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MobileCoreServices"))]
use crate::MobileCoreServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "MobileCoreServices"))]
use crate::MobileCoreServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MobileCoreServices"))]
use crate::MobileCoreServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ModelIO"))]
use crate::ModelIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ModelIO"))]
use crate::ModelIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ModelIO"))]
use crate::ModelIO;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "MultipeerConnectivity"))]
use crate::MultipeerConnectivity;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "MultipeerConnectivity"))]
use crate::MultipeerConnectivity;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "MultipeerConnectivity"))]
use crate::MultipeerConnectivity;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "NaturalLanguage"))]
use crate::NaturalLanguage;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "NaturalLanguage"))]
use crate::NaturalLanguage;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "NaturalLanguage"))]
use crate::NaturalLanguage;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "NaturalLanguage"))]
use crate::NaturalLanguage;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "NearbyInteraction"))]
use crate::NearbyInteraction;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "NearbyInteraction"))]
use crate::NearbyInteraction;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "NearbyInteraction"))]
use crate::NearbyInteraction;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "NetFS"))]
use crate::NetFS;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Network"))]
use crate::Network;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Network"))]
use crate::Network;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Network"))]
use crate::Network;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Network"))]
use crate::Network;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "NetworkExtension"))]
use crate::NetworkExtension;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "NetworkExtension"))]
use crate::NetworkExtension;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "NetworkExtension"))]
use crate::NetworkExtension;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "NewsstandKit"))]
use crate::NewsstandKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "NotificationCenter"))]
use crate::NotificationCenter;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "NotificationCenter"))]
use crate::NotificationCenter;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "OSAKit"))]
use crate::OSAKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "OSLog"))]
use crate::OSLog;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "OSLog"))]
use crate::OSLog;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "OSLog"))]
use crate::OSLog;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "OSLog"))]
use crate::OSLog;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "OpenAL"))]
use crate::OpenAL;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "OpenAL"))]
use crate::OpenAL;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "OpenAL"))]
use crate::OpenAL;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "OpenCL"))]
use crate::OpenCL;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "OpenDirectory"))]
use crate::OpenDirectory;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "OpenGL"))]
use crate::OpenGL;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "OpenGLES"))]
use crate::OpenGLES;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "OpenGLES"))]
use crate::OpenGLES;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PDFKit"))]
use crate::PDFKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "PDFKit"))]
use crate::PDFKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ParavirtualizedGraphics"))]
use crate::ParavirtualizedGraphics;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PassKit"))]
use crate::PassKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "PassKit"))]
use crate::PassKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "PassKit"))]
use crate::PassKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PencilKit"))]
use crate::PencilKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "PencilKit"))]
use crate::PencilKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Photos"))]
use crate::Photos;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Photos"))]
use crate::Photos;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Photos"))]
use crate::Photos;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PhotosUI"))]
use crate::PhotosUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "PhotosUI"))]
use crate::PhotosUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "PhotosUI"))]
use crate::PhotosUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "PhotosUI"))]
use crate::PhotosUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PreferencePanes"))]
use crate::PreferencePanes;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ProximityReader"))]
use crate::ProximityReader;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PushKit"))]
use crate::PushKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "PushKit"))]
use crate::PushKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "PushKit"))]
use crate::PushKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PushToTalk"))]
use crate::PushToTalk;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "PushToTalk"))]
use crate::PushToTalk;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Quartz"))]
use crate::Quartz;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "QuartzCore"))]
use crate::QuartzCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "QuartzCore"))]
use crate::QuartzCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "QuartzCore"))]
use crate::QuartzCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "QuickLook"))]
use crate::QuickLook;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "QuickLook"))]
use crate::QuickLook;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "QuickLookThumbnailing"))]
use crate::QuickLookThumbnailing;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "QuickLookThumbnailing"))]
use crate::QuickLookThumbnailing;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "QuickLookUI"))]
use crate::QuickLookUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ReplayKit"))]
use crate::ReplayKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ReplayKit"))]
use crate::ReplayKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ReplayKit"))]
use crate::ReplayKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "RoomPlan"))]
use crate::RoomPlan;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SafariServices"))]
use crate::SafariServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SafariServices"))]
use crate::SafariServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SafetyKit"))]
use crate::SafetyKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SafetyKit"))]
use crate::SafetyKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "SafetyKit"))]
use crate::SafetyKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SceneKit"))]
use crate::SceneKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SceneKit"))]
use crate::SceneKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "SceneKit"))]
use crate::SceneKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "SceneKit"))]
use crate::SceneKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ScreenCaptureKit"))]
use crate::ScreenCaptureKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ScreenSaver"))]
use crate::ScreenSaver;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ScreenTime"))]
use crate::ScreenTime;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ScreenTime"))]
use crate::ScreenTime;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ScriptingBridge"))]
use crate::ScriptingBridge;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Security"))]
use crate::Security;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Security"))]
use crate::Security;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "Security"))]
use crate::Security;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Security"))]
use crate::Security;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SecurityFoundation"))]
use crate::SecurityFoundation;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SecurityInterface"))]
use crate::SecurityInterface;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SensorKit"))]
use crate::SensorKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SensorKit"))]
use crate::SensorKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ServiceManagement"))]
use crate::ServiceManagement;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SharedWithYou"))]
use crate::SharedWithYou;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SharedWithYou"))]
use crate::SharedWithYou;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "SharedWithYou"))]
use crate::SharedWithYou;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SharedWithYouCore"))]
use crate::SharedWithYouCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SharedWithYouCore"))]
use crate::SharedWithYouCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "SharedWithYouCore"))]
use crate::SharedWithYouCore;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ShazamKit"))]
use crate::ShazamKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ShazamKit"))]
use crate::ShazamKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "ShazamKit"))]
use crate::ShazamKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "ShazamKit"))]
use crate::ShazamKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Social"))]
use crate::Social;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Social"))]
use crate::Social;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SoundAnalysis"))]
use crate::SoundAnalysis;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SoundAnalysis"))]
use crate::SoundAnalysis;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "SoundAnalysis"))]
use crate::SoundAnalysis;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "SoundAnalysis"))]
use crate::SoundAnalysis;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Speech"))]
use crate::Speech;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Speech"))]
use crate::Speech;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SpriteKit"))]
use crate::SpriteKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SpriteKit"))]
use crate::SpriteKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "SpriteKit"))]
use crate::SpriteKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "SpriteKit"))]
use crate::SpriteKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "StoreKit"))]
use crate::StoreKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "StoreKit"))]
use crate::StoreKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "StoreKit"))]
use crate::StoreKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "StoreKit"))]
use crate::StoreKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SwiftUI"))]
use crate::SwiftUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SwiftUI"))]
use crate::SwiftUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "SwiftUI"))]
use crate::SwiftUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "SwiftUI"))]
use crate::SwiftUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SyncServices"))]
use crate::SyncServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SystemConfiguration"))]
use crate::SystemConfiguration;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "SystemConfiguration"))]
use crate::SystemConfiguration;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "SystemConfiguration"))]
use crate::SystemConfiguration;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "SystemExtensions"))]
use crate::SystemExtensions;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "TVMLKit"))]
use crate::TVMLKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "TVServices"))]
use crate::TVServices;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "TVUIKit"))]
use crate::TVUIKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Tcl"))]
use crate::Tcl;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "ThreadNetwork"))]
use crate::ThreadNetwork;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "ThreadNetwork"))]
use crate::ThreadNetwork;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Twitter"))]
use crate::Twitter;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "UIKit"))]
use crate::UIKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "UIKit"))]
use crate::UIKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "UIKit"))]
use crate::UIKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "UniformTypeIdentifiers"))]
use crate::UniformTypeIdentifiers;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "UniformTypeIdentifiers"))]
use crate::UniformTypeIdentifiers;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "UniformTypeIdentifiers"))]
use crate::UniformTypeIdentifiers;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "UniformTypeIdentifiers"))]
use crate::UniformTypeIdentifiers;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "UserNotifications"))]
use crate::UserNotifications;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "UserNotifications"))]
use crate::UserNotifications;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "UserNotifications"))]
use crate::UserNotifications;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "UserNotifications"))]
use crate::UserNotifications;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "UserNotificationsUI"))]
use crate::UserNotificationsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "UserNotificationsUI"))]
use crate::UserNotificationsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "UserNotificationsUI"))]
use crate::UserNotificationsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "UserNotificationsUI"))]
use crate::UserNotificationsUI;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "VideoDecodeAcceleration"))]
use crate::VideoDecodeAcceleration;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "VideoSubscriberAccount"))]
use crate::VideoSubscriberAccount;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "VideoSubscriberAccount"))]
use crate::VideoSubscriberAccount;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "VideoSubscriberAccount"))]
use crate::VideoSubscriberAccount;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "VideoToolbox"))]
use crate::VideoToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "VideoToolbox"))]
use crate::VideoToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "VideoToolbox"))]
use crate::VideoToolbox;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Virtualization"))]
use crate::Virtualization;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "Vision"))]
use crate::Vision;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "Vision"))]
use crate::Vision;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "Vision"))]
use crate::Vision;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "VisionKit"))]
use crate::VisionKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "VisionKit"))]
use crate::VisionKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "WatchConnectivity"))]
use crate::WatchConnectivity;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "WatchConnectivity"))]
use crate::WatchConnectivity;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "WatchKit"))]
use crate::WatchKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "WebKit"))]
use crate::WebKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "WidgetKit"))]
use crate::WidgetKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "WidgetKit"))]
use crate::WidgetKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "watchos", feature = "WidgetKit"))]
use crate::WidgetKit;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "AGL"))]
use crate::AGL;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "GLUT"))]
use crate::GLUT;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "GSS"))]
use crate::GSS;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "GSS"))]
use crate::GSS;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "LDAP"))]
use crate::LDAP;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PCSC"))]
use crate::PCSC;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "PHASE"))]
use crate::PHASE;
#[allow(unused_imports)]
#[cfg(all(target_os = "ios", feature = "PHASE"))]
use crate::PHASE;
#[allow(unused_imports)]
#[cfg(all(target_os = "tvos", feature = "PHASE"))]
use crate::PHASE;
#[allow(unused_imports)]
#[cfg(all(target_os = "macos", feature = "TWAIN"))]
use crate::TWAIN;
